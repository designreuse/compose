version: '3.7'
services:
  jenkins:
    image: uscdev/jenkins
    ports:
      - 50000:50000
      - 8080:8080
    environment:
      - JAVA_OPTS=-Duser.timezone=${TZ:-America/Los_Angeles}
      - DOCKER_HOST=tcp://${NODEMGR:-docker-proxy}:${NODEMGRPORT:-2376}
      - DOCKER_TLS_VERIFY=1
      - DOCKER_CERT_PATH=/run/secrets
    networks:
      - proxy
      - docker-proxy
    volumes:
      - jenkins-data:/var/jenkins_home
    secrets:
      - ca.pem
      - cert.pem
      - key.pem
      - saml-key.jks
    deploy:
      replicas: 1
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.serviceDomain=${JENKINS_SUB_DOMAIN:-jenkins}.${DOMAIN_NAME:-docker.usc.edu}
        - com.df.httpsOnly=true
        - com.df.port=8080
        - com.df.xForwardedProto=true
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  jenkins-docker-agent:
    image: uscdev/jenkins-swarm-agent
    hostname: jenkins-docker-agent
    environment:
      - COMMAND_OPTIONS=-master http://${JENKINS_IP:-jenkins:8080}${JENKINS_PATH:-/} -username ${MASTER_USER:-admin} -passwordEnvVariable PASSWORD_ENVVAR -labels 'docker' -executors 5
      - PASSWORD_ENVVAR=${MASTER_PASS:-admin}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - workspace:/workspace
    networks:
      - docker-proxy
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  jenkins-swarm-agent:
    image: uscdev/jenkins-swarm-agent
    hostname: jenkins-swarm-agent
    environment:
      - COMMAND_OPTIONS=-master http://${JENKINS_IP:-jenkins:8080}${JENKINS_PATH:-/} -username ${MASTER_USER:-admin} -passwordEnvVariable PASSWORD_ENVVAR -labels 'swarm' -executors 5
      - PASSWORD_ENVVAR=${MASTER_PASS:-admin}
      - DOCKER_HOST=tcp://${NODEMGR:-docker-proxy}:${NODEMGRPORT:-2376}
      - DOCKER_TLS_VERIFY=1
      - DOCKER_CERT_PATH=/run/secrets
    volumes:
      - workspace:/workspace
    secrets:
      - ca.pem
      - cert.pem
      - key.pem
    networks:
      - docker-proxy
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

volumes:
  jenkins-data:
    external: true
    name: ${JENKINS_DATA:-jenkins-data}
  workspace:
  #    external: true
networks:
  proxy:
    external: true
  docker-proxy:
    external: true
secrets:
  ca.pem:
    external: true
  cert.pem:
    external: true
  key.pem:
    external: true
  saml-key.jks:
    external: true
